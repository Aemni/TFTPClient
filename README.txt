1. 라이브러리 및 상수 정의
    socket, argparse, sys, struct와 같은 라이브러리를 가져와서 사용합니다. socket은 네트워크 통신을 위해, argparse는 명령행 인자 파싱을 위해 사용됩니다.
    DEFAULT_PORT, BLOCK_SIZE, DEFAULT_TRANSFER_MODE, SOCKET_TIMEOUT과 같은 상수들은 TFTP 클라이언트에서 사용되는 기본 설정값들을 정의합니다.

2. 메시지와 오류 코드 정의
    OPCODE는 TFTP 메시지 타입을 정의합니다. RRQ, WRQ, DATA, ACK, ERROR에 대한 숫자 코드를 부여합니다.
    MODE는 TFTP 전송 모드를 정의합니다. netascii, octet, mail 등의 모드를 숫자 코드로 부여합니다.
    ERROR_CODE는 서버에서 발생할 수 있는 오류 코드들에 대한 설명을 담고 있습니다.

3. 패킷 생성 함수
    send_wrq(), send_rrq(), send_ack(), send_data(): 각 함수는 TFTP 메시지를 생성하고, 이를 서버로 전송합니다. pack 함수를 사용하여 바이너리 데이터로 패킷을 만듭니다.

4. 파일 수신 함수
    receive_file(): 파일을 서버로부터 받아오는 함수입니다. UDP를 통해 서버에서 데이터를 수신하고, 받은 데이터를 파일로 쓰며 ACK를 보냅니다. 파일을 모두 받을 때까지 이 과정을 반복합니다.

5. 파일 전송 함수
    send_file(): 클라이언트에서 서버로 파일을 전송하는 함수입니다. ACK를 받고, 파일 데이터를 전송하며, 파일의 끝까지 이 과정을 반복합니다.

6. 명령행 인수 파싱
    argparse를 사용하여 명령행에서 사용자로부터 호스트 주소, 작업 유형(get 또는 put), 파일 이름, 포트 번호(선택적)를 입력받습니다.

7. 서버 주소 설정 및 소켓 생성
    사용자로부터 입력받은 호스트 주소와 포트 번호를 기반으로 서버의 주소를 설정하고, UDP 소켓을 생성합니다.

8. 작업 유형에 따른 처리
    get 작업일 경우 파일을 서버로부터 받아옵니다. put 작업일 경우 파일을 서버로 전송합니다. 작업 완료 후에는 소켓을 닫습니다.